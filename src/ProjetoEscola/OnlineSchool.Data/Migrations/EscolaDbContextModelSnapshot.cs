// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSchool.Data.Context;

namespace OnlineSchool.Data.Migrations
{
    [DbContext(typeof(EscolaDbContext))]
    partial class EscolaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineSchool.Busness.Academico.Models.Carreira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Carreiras");
                });

            modelBuilder.Entity("OnlineSchool.Busness.Academico.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("CargaHoraria")
                        .HasColumnType("decimal(5,2)");

                    b.Property<Guid>("CarreiraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarreiraId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("OnlineSchool.Busness.Academico.Models.MaterialDeApoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("MateriaisDeApoio");
                });

            modelBuilder.Entity("OnlineSchool.Busness.Models.Academico.CursoPessoa", b =>
                {
                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PessoaId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("CursosPessoas");
                });

            modelBuilder.Entity("OnlineSchool.Busness.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("OnlineSchool.Busness.Academico.Models.Curso", b =>
                {
                    b.HasOne("OnlineSchool.Busness.Academico.Models.Carreira", "Carreira")
                        .WithMany("Cursos")
                        .HasForeignKey("CarreiraId")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSchool.Busness.Academico.Models.MaterialDeApoio", b =>
                {
                    b.HasOne("OnlineSchool.Busness.Academico.Models.Curso", "Curso")
                        .WithMany("MateriaisDeApoio")
                        .HasForeignKey("CursoId")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSchool.Busness.Models.Academico.CursoPessoa", b =>
                {
                    b.HasOne("OnlineSchool.Busness.Models.Pessoa", "Pessoa")
                        .WithMany("Cursos")
                        .HasForeignKey("CursoId")
                        .IsRequired();

                    b.HasOne("OnlineSchool.Busness.Academico.Models.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("PessoaId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
